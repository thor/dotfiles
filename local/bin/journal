#!/usr/bin/env bash

set -o nounset

# TODO: look at whether this should be in vim or with the script?
# https://rajivrnair.dev/journal-vi

# - the folder we execute the script from
readonly EXECUTION_FOLDER=$(pwd)
# - the folder containing our journal entries
readonly JOURNAL_FOLDER=~/dev/master-thesis/journal
# - the date format for the journal on
readonly DATE_JOURNAL="%Y-%m-%d"
# - the date format for a journal entry
readonly DATE_JOURNAL_ENTRY="%A %d. %B %k:%M"
# - create the folder containing the journal folder
mkdir -p "$JOURNAL_FOLDER"

if [ -z "${1:-}" ]; then
	echo -n "Title: "
	read -r journal_title
else
	journal_title=$1
fi

function journal() {
	journal_title_slug=$(echo "$journal_title" | iconv -t ascii//TRANSLIT | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-+|-+$//g' | tr "[:upper:]-Z" "[:lower:]-z")
	journal_filename_core="$(date +"$DATE_JOURNAL")"
	journal_filename_glob="$journal_filename_core-*.md"
	journal_filename="$journal_filename_core-${journal_title_slug}.md"
	journal_filepath="$JOURNAL_FOLDER/$journal_filename"

	existing_journal="$(find $JOURNAL_FOLDER -maxdepth 1 -name "$journal_filename_glob" -print -quit)"

	if test -n "$existing_journal"; then
		set -x
		printf \
			"\n# %s: %s\n\n\n" \
			"$(date +"$DATE_JOURNAL_ENTRY")" \
			"$journal_title" \
			>> "$existing_journal"
		nvim "$existing_journal" +Goyo +$ +foldopen +startinsert

	else
		cat <<- EOF | nvim +"file $journal_filepath" +Goyo +$ +foldopen +startinsert -
		---
		title: "$journal_title"
		date: "$(date +"$DATE_JOURNAL")"
		---

		# $(date +"$DATE_JOURNAL_ENTRY")


		EOF
	fi

	# Return to start; OR in the event something happened to the folder
	cd "$EXECUTION_FOLDER" || exit

}


## export or run
if [ "${BASH_SOURCE[0]}" != "$0" ]; then
  export -f journal
else
  journal "$@"
fi
